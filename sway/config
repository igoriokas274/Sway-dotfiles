# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

font pango:Roboto Regular 14, Font Awesome 10, Noto Sans JP Regular 10

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term foot
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --

# Application launcher with fzf
# set $menu exec $term --class=launcher -e bash -c 'compgen -c | grep -v fzf | sort -u | fzf --layout=reverse | xargs -r swaymsg -t command exec'
# OR
# Application launcher with Wofi
set $menu wofi --show drun  -i | xargs swaymsg exec --

# Windows config
#for_window [app_id="^launcher$"] floating enable
for_window [app_id="^pavucontrol$"] floating enable
for_window [app_id="^blueman-manager$"] floating enable
for_window [app_id="^nm-connection-editor$"] floating enable
for_window [app_id="^snap-store$"] floating enable
for_window [app_id="^megasync$"] floating enable
for_window [app_id="^pcmanfm$"] floating enable

# Includes

include /etc/sway/config-vars.d/*

#========================#
# Appearance and Theming #
#========================#
# Declare Colors:
# set $background #332b2b
# set $color_urgent #fb4934
# set $text_color #ffffff
# set $title_bg_unfocused #666666
# set $title_outline_active #0e844e
# set $title_outline_unfocused #332b2b

# # Set Colors:           Border                   Background          Text          Indicator             Child Border
# client.background       $background
# client.focused          $title_outline_active    $background         $text_color   $title_outline_active $title_outline_active
# client.focused_inactive $title_outline_unfocused $background         $text_color   $text_color           $title_outline_unfocused
# client.unfocused        $title_outline_unfocused $title_bg_unfocused $text_color   $title_outline_active
# client.urgent           $color_urgent            $color_urgent       $color_urgent $color_urgent         $color_urgent

# Define colors variables:
set $darkbluetrans  #08052be6
set $darkblue       #08052b
set $lightblue      #5294e2
set $urgentred      #e53935
set $white          #ffffff
set $black          #000000
set $purple         #e345ff
set $darkgrey       #383c4a
set $grey           #b0b5bd
set $mediumgrey     #8b8b8b
set $yellowbrown    #e1b700

#class                  border          bg          text        indicator       child border
client.focused          $mediumgrey     $darkgrey   $white      $grey           $mediumgrey
client.unfocused        $black          $black      $grey       $black          $black
client.focused_inactive $darkblue       $darkblue   $grey       $black          $black
client.urgent           $urgentred      $urgentred  $white      $yellowbrown    $yellowbrown

# Add gaps in between all application windows:
gaps inner 10
gaps outer 1

# Configure the default border:
default_border pixel 1

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /home/skythen/.config/sway/pier.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 '/home/skythen/.config/sway/create_lock_image && swaylock -f -i /tmp/sway_lock_image.png' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# Lock
bindsym $mod+l exec swaylock -c 000000f0

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input * {
    xkb_layout "us,lt"
    xkb_variant ","
    xkb_options "grp:win_space_toggle"
}

input <identifier> xkb_model "pc101"

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Logout' 'swaymsg exit'
    #bindsym $mod+Shift+e exec $HOME/.config/sway/exit.sh
    bindsym $mod+Shift+e exit
    
#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Define names for default workspaces for which we configure key bindings later on.
    set $ws1  "1"
    set $ws2  "2"
    set $ws3  "3"
    set $ws4  "4"
    set $ws5  "5"
    set $ws6  "6"
    set $ws7  "7"
    set $ws8  "8"
    set $ws9  "9"
    set $ws10 "10"

    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10

    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    position top
    gaps 3 3
    # workspace_buttons yes
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

exec mako

include /etc/sway/config.d/*

# Screenshots
# currently having a custom grimshot under .local/bin
# for now this will do...
set $grimshot /usr/bin/grimshot

bindsym Print exec $grimshot --notify save screen
bindsym Ctrl+Print exec $grimshot --notify copy screen
bindsym Shift+Print exec $grimshot --notify save area
bindsym Ctrl+Shift+Print exec $grimshot --notify copy area

# Hide cursor
seat seat0 hide_cursor 5000
seat * hide_cursor when-typing enable

# volume / brightness / media controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec sudo brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec sudo brightnessctl set +5%
bindsym XF86Search exec wofi # bemenu-run

# Start programs
# exec nm-applet --indicator
exec_always --no-startup-id nm-applet --indicator &
exec_always --no-startup-id blueman-applet &
exec --no-startup-id "sh -c 'sleep 7; exec megasync'"
# exec --no-startup-id "sh -c 'sleep 10; exec ./filen_x86_64.AppImage'"
